/**
 * ÌéòÏù¥ÏßÄ Î∑∞ Ïù¥Î≤§Ìä∏ Ï∂îÏ†Å - Ïú†Ïó∞ÌïòÍ≥† ÌôïÏû• Í∞ÄÎä•Ìïú Íµ¨Ï°∞
 */

// ÌéòÏù¥ÏßÄ Î∑∞ Ïù¥Î≤§Ìä∏ Ï†ÑÏÜ°
function trackPageView() {
  console.log('üìÑ ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å ÏãúÏûë...');
  
  // ThinkingData SDK ÌôïÏù∏
  if (typeof window.te === 'undefined') {
    console.warn('‚ö†Ô∏è ThinkingData SDKÍ∞Ä Î°úÎìúÎêòÏßÄ ÏïäÏùå, 3Ï¥à ÌõÑ Ïû¨ÏãúÎèÑ...');
    setTimeout(trackPageView, 3000);
    return;
  }
  
  // SDK ÏûêÎèô Ïù¥Î≤§Ìä∏ÏôÄ Ï§ëÎ≥µ Î∞©ÏßÄÎ•º ÏúÑÌï¥ Ïª§Ïä§ÌÖÄ Ïù¥Î≤§Ìä∏Î™Ö ÏÇ¨Ïö©
  const pageViewProperties = {
    page_url: window.location.href,
    page_path: window.location.pathname,
    page_title: document.title,
    page_hostname: window.location.hostname,
    page_protocol: window.location.protocol,
    page_hash: window.location.hash || null,
    page_query: window.location.search || null,
    // ÎèôÏ†Å ÌéòÏù¥ÏßÄ Î∂ÑÏÑù Ï†ïÎ≥¥
    page_section: getPageSection(),
    page_category: getPageCategory(),
    page_content_type: getPageContentType(),
    page_has_forms: hasForms(),
    page_has_videos: hasVideos(),
    page_has_downloads: hasDownloads(),
    page_load_time: getPageLoadTime(),
    page_view_timestamp: Date.now(),
    // ÎèôÏ†Å Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏàòÏßë
    page_meta_data: getPageMetaData(),
    page_structure_info: getPageStructureInfo(),
    event_source: 'custom_module', // Ïª§Ïä§ÌÖÄ Î™®ÎìàÏóêÏÑú Î∞úÏÉùÌïú Ïù¥Î≤§Ìä∏ÏûÑÏùÑ ÌëúÏãú
    timestamp: new Date().toISOString()
  };
  
  // referrer Ï†ïÎ≥¥Í∞Ä ÏûàÏùÑ ÎïåÎßå Ï∂îÍ∞Ä
  if (document.referrer) {
    pageViewProperties.referrer = document.referrer;
    try {
      const referrerUrl = new URL(document.referrer);
      pageViewProperties.referrer_host = referrerUrl.hostname;
      pageViewProperties.referrer_path = referrerUrl.pathname;
      pageViewProperties.is_internal_referrer = referrerUrl.hostname === window.location.hostname;
    } catch (e) {
      console.warn('Referrer URL ÌååÏã± Ïã§Ìå®:', e);
    }
  }
  
  // ÎèôÏ†Å ÌååÎùºÎØ∏ÌÑ∞ Ï∂îÏ∂ú (ÌôïÏû• Í∞ÄÎä•)
  const urlParams = new URLSearchParams(window.location.search);
  const dynamicParams = extractDynamicParameters(urlParams);
  
  if (Object.keys(dynamicParams.utm).length > 0) {
    pageViewProperties.utm_parameters = dynamicParams.utm;
  }
  
  if (Object.keys(dynamicParams.tracking).length > 0) {
    pageViewProperties.tracking_parameters = dynamicParams.tracking;
  }
  
  if (Object.keys(dynamicParams.custom).length > 0) {
    pageViewProperties.custom_parameters = dynamicParams.custom;
  }
  
  trackEvent('custom_page_view', pageViewProperties);
  console.log('üìÑ ÌéòÏù¥ÏßÄ Î∑∞ Ïù¥Î≤§Ìä∏ Ï†ÑÏÜ°:', pageViewProperties);
}

// ÎèôÏ†Å ÌéòÏù¥ÏßÄ ÏÑπÏÖò Í∞êÏßÄ (ÌôïÏû• Í∞ÄÎä•)
function getPageSection() {
  const path = window.location.pathname;
  
  // Í∏∞Î≥∏ ÏÑπÏÖò Îß§Ìïë (ÏÑ§Ï†ï Í∞ÄÎä•)
  const sectionMappings = window.pageSectionMappings || {
    '/': 'home',
    '/blog': 'blog',
    '/user-case': 'user_case',
    '/company': 'company',
    '/culture': 'culture',
    '/news': 'news',
    '/solution': 'solution',
    '/feature': 'feature',
    '/form-demo': 'demo_form',
    '/form-ask': 'contact_form'
  };
  
  // Ï†ïÌôïÌïú Îß§Ïπ≠ Î®ºÏ†Ä ÏãúÎèÑ
  if (sectionMappings[path]) {
    return sectionMappings[path];
  }
  
  // Î∂ÄÎ∂Ñ Îß§Ïπ≠ÏúºÎ°ú ÎèôÏ†Å Í∞êÏßÄ
  for (const [pattern, section] of Object.entries(sectionMappings)) {
    if (pattern !== '/' && path.startsWith(pattern)) {
      return section;
    }
  }
  
  // ÎèôÏ†Å Ìå®ÌÑ¥ Í∞êÏßÄ
  const dynamicPatterns = {
    '/form-': 'form',
    '/blog/': 'blog_post',
    '/user-case/': 'case_study',
    '/solution/': 'solution_page',
    '/feature/': 'feature_page',
    '/product/': 'product_page',
    '/service/': 'service_page'
  };
  
  for (const [pattern, section] of Object.entries(dynamicPatterns)) {
    if (path.includes(pattern)) {
      return section;
    }
  }
  
  // Í∏∞Î≥∏Í∞í
  return 'other';
}

// ÎèôÏ†Å ÌéòÏù¥ÏßÄ Ïπ¥ÌÖåÍ≥†Î¶¨ Î∂ÑÎ•ò (ÌôïÏû• Í∞ÄÎä•)
function getPageCategory() {
  const path = window.location.pathname;
  const title = document.title.toLowerCase();
  
  // Ïπ¥ÌÖåÍ≥†Î¶¨ Îß§Ìïë (ÏÑ§Ï†ï Í∞ÄÎä•)
  const categoryMappings = window.pageCategoryMappings || {
    'landing': ['/', ''],
    'content': ['/blog', '/user-case', '/article', '/post'],
    'company': ['/company', '/culture', '/news', '/about'],
    'product': ['/solution', '/feature', '/product', '/service'],
    'conversion': ['/form-', '/contact', '/demo', '/request']
  };
  
  // ÎèôÏ†Å Ïπ¥ÌÖåÍ≥†Î¶¨ Í∞êÏßÄ
  for (const [category, patterns] of Object.entries(categoryMappings)) {
    for (const pattern of patterns) {
      if (path.includes(pattern)) {
        return category;
      }
    }
  }
  
  // Ï†úÎ™© Í∏∞Î∞ò Í∞êÏßÄ
  const titleKeywords = {
    'landing': ['Ìôà', 'home', 'Î©îÏù∏'],
    'content': ['Î∏îÎ°úÍ∑∏', 'blog', 'ÏÇ¨Î°Ä', 'case'],
    'company': ['ÌöåÏÇ¨', 'company', 'ÏÜåÍ∞ú', 'about'],
    'product': ['ÏÜîÎ£®ÏÖò', 'solution', 'Í∏∞Îä•', 'feature'],
    'conversion': ['Îç∞Î™®', 'demo', 'Î¨∏Ïùò', 'contact', 'Ïã†Ï≤≠']
  };
  
  for (const [category, keywords] of Object.entries(titleKeywords)) {
    for (const keyword of keywords) {
      if (title.includes(keyword)) {
        return category;
      }
    }
  }
  
  return 'other';
}

// ÎèôÏ†Å ÌéòÏù¥ÏßÄ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ Í∞êÏßÄ (ÌôïÏû• Í∞ÄÎä•)
function getPageContentType() {
  const path = window.location.pathname;
  const title = document.title.toLowerCase();
  
  // ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ Îß§Ìïë (ÏÑ§Ï†ï Í∞ÄÎä•)
  const contentTypeMappings = window.pageContentTypeMappings || {
    'form': ['/form-', '/contact', '/demo', '/request'],
    'blog_post': ['/blog/', '/post/', '/article/'],
    'case_study': ['/user-case/', '/case/', '/study/'],
    'solution_page': ['/solution/', '/product/', '/service/'],
    'feature_page': ['/feature/', '/function/', '/capability/'],
    'demo_page': ['/demo', '/trial', '/test'],
    'contact_page': ['/contact', '/inquiry', '/ask']
  };
  
  // ÎèôÏ†Å ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ Í∞êÏßÄ
  for (const [type, patterns] of Object.entries(contentTypeMappings)) {
    for (const pattern of patterns) {
      if (path.includes(pattern)) {
        return type;
      }
    }
  }
  
  // Ï†úÎ™© Í∏∞Î∞ò Í∞êÏßÄ
  const titleTypeKeywords = {
    'form': ['Ïã†Ï≤≠', 'Î¨∏Ïùò', 'contact', 'form'],
    'blog_post': ['Î∏îÎ°úÍ∑∏', 'blog', 'Ìè¨Ïä§Ìä∏', 'post'],
    'case_study': ['ÏÇ¨Î°Ä', 'case', 'Ïä§ÌÑ∞Îîî', 'study'],
    'demo_page': ['Îç∞Î™®', 'demo', 'Ï≤¥Ìóò', 'trial'],
    'contact_page': ['Î¨∏Ïùò', 'contact', 'Ïó∞ÎùΩ', 'inquiry']
  };
  
  for (const [type, keywords] of Object.entries(titleTypeKeywords)) {
    for (const keyword of keywords) {
      if (title.includes(keyword)) {
        return type;
      }
    }
  }
  
  return 'general';
}

// ÎèôÏ†Å ÌååÎùºÎØ∏ÌÑ∞ Ï∂îÏ∂ú (ÌôïÏû• Í∞ÄÎä•)
function extractDynamicParameters(urlParams) {
  const params = {
    utm: {},
    tracking: {},
    custom: {}
  };
  
  // UTM ÌååÎùºÎØ∏ÌÑ∞ (ÌôïÏû• Í∞ÄÎä•)
  const utmParams = window.utmParameters || ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'utm_id'];
  utmParams.forEach(param => {
    const value = urlParams.get(param);
    if (value) {
      params.utm[param] = value;
    }
  });
  
  // Ï∂îÏ†Å ÌååÎùºÎØ∏ÌÑ∞ (ÌôïÏû• Í∞ÄÎä•)
  const trackingParams = window.trackingParameters || ['gclid', 'fbclid', 'msclkid', '_ga', '_gl', 'ref'];
  trackingParams.forEach(param => {
    const value = urlParams.get(param);
    if (value) {
      params.tracking[param] = value;
    }
  });
  
  // Ïª§Ïä§ÌÖÄ ÌååÎùºÎØ∏ÌÑ∞ (ÌôïÏû• Í∞ÄÎä•)
  const customParams = window.customParameters || ['source', 'medium', 'campaign', 'term', 'content'];
  customParams.forEach(param => {
    const value = urlParams.get(param);
    if (value) {
      params.custom[param] = value;
    }
  });
  
  return params;
}

// ÎèôÏ†Å ÌéòÏù¥ÏßÄ Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏàòÏßë
function getPageMetaData() {
  const metaData = {};
  
  // Î©îÌÉÄ ÌÉúÍ∑∏ÏóêÏÑú Ï†ïÎ≥¥ ÏàòÏßë
  const metaTags = document.querySelectorAll('meta');
  metaTags.forEach(tag => {
    const name = tag.getAttribute('name') || tag.getAttribute('property');
    const content = tag.getAttribute('content');
    if (name && content) {
      metaData[name] = content;
    }
  });
  
  // Open Graph ÌÉúÍ∑∏ ÏàòÏßë
  const ogTags = document.querySelectorAll('meta[property^="og:"]');
  ogTags.forEach(tag => {
    const property = tag.getAttribute('property');
    const content = tag.getAttribute('content');
    if (property && content) {
      metaData[property] = content;
    }
  });
  
  // Twitter Card ÌÉúÍ∑∏ ÏàòÏßë
  const twitterTags = document.querySelectorAll('meta[name^="twitter:"]');
  twitterTags.forEach(tag => {
    const name = tag.getAttribute('name');
    const content = tag.getAttribute('content');
    if (name && content) {
      metaData[name] = content;
    }
  });
  
  return metaData;
}

// ÎèôÏ†Å ÌéòÏù¥ÏßÄ Íµ¨Ï°∞ Ï†ïÎ≥¥ ÏàòÏßë
function getPageStructureInfo() {
  const structureInfo = {
    has_header: !!document.querySelector('header, .header, .nav, nav'),
    has_footer: !!document.querySelector('footer, .footer'),
    has_sidebar: !!document.querySelector('aside, .sidebar, .side-nav'),
    has_main_content: !!document.querySelector('main, .main, .content'),
    has_navigation: !!document.querySelector('nav, .nav, .navigation, .menu'),
    has_search: !!document.querySelector('input[type="search"], .search, .search-box'),
    has_breadcrumb: !!document.querySelector('.breadcrumb, .breadcrumbs, [aria-label*="breadcrumb"]'),
    has_pagination: !!document.querySelector('.pagination, .pager, .page-nav'),
    has_social_share: !!document.querySelector('.social-share, .share-buttons, [class*="share"]'),
    has_related_content: !!document.querySelector('.related, .related-posts, .similar'),
    form_count: document.querySelectorAll('form').length,
    video_count: document.querySelectorAll('video, iframe[src*="youtube"], iframe[src*="vimeo"]').length,
    download_count: document.querySelectorAll('a[href*=".pdf"], a[href*=".doc"], a[href*=".zip"]').length,
    image_count: document.querySelectorAll('img').length,
    link_count: document.querySelectorAll('a').length
  };
  
  return structureInfo;
}

// Ìèº Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏
function hasForms() {
  const forms = document.querySelectorAll('form');
  return forms.length > 0;
}

// ÎπÑÎîîÏò§ Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏ (ÌôïÏû• Í∞ÄÎä•)
function hasVideos() {
  const videoSelectors = window.videoSelectors || [
    'video',
    'iframe[src*="youtube"]',
    'iframe[src*="vimeo"]',
    'iframe[src*="dailymotion"]',
    'iframe[src*="wistia"]',
    '.video-player',
    '[class*="video"]'
  ];
  
  const selector = videoSelectors.join(', ');
  const videos = document.querySelectorAll(selector);
  return videos.length > 0;
}

// Îã§Ïö¥Î°úÎìú ÎßÅÌÅ¨ Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏ (ÌôïÏû• Í∞ÄÎä•)
function hasDownloads() {
  const downloadExtensions = window.downloadExtensions || [
    '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx',
    '.zip', '.rar', '.7z', '.tar', '.gz',
    '.mp4', '.avi', '.mov', '.wmv',
    '.mp3', '.wav', '.aac'
  ];
  
  const downloadSelectors = downloadExtensions.map(ext => `a[href*="${ext}"]`).join(', ');
  const downloadLinks = document.querySelectorAll(downloadSelectors);
  return downloadLinks.length > 0;
}

// ÌéòÏù¥ÏßÄ Î°úÎìú ÏãúÍ∞Ñ Ï∏°Ï†ï
function getPageLoadTime() {
  if (performance && performance.timing) {
    const timing = performance.timing;
    return timing.loadEventEnd - timing.navigationStart;
  } else if (performance && performance.getEntriesByType) {
    const navigation = performance.getEntriesByType('navigation')[0];
    if (navigation) {
      return navigation.loadEventEnd - navigation.startTime;
    }
  }
  return null;
}

// SPA ÌôòÍ≤ΩÏóêÏÑú ÌéòÏù¥ÏßÄ Î≥ÄÍ≤Ω Í∞êÏßÄÎ•º ÏúÑÌïú Ìï®Ïàò
function initSPAPageTracking() {
  console.log('üìÑ SPA ÌéòÏù¥ÏßÄ Ï∂îÏ†Å Ï¥àÍ∏∞Ìôî...');
  
  let lastUrl = window.location.href;
  let lastPath = window.location.pathname;
  
  // URL Î≥ÄÍ≤Ω Í∞êÏßÄÎ•º ÏúÑÌïú Ïù∏ÌÑ∞Î≤å ÏÑ§Ï†ï
  setInterval(() => {
    const currentUrl = window.location.href;
    const currentPath = window.location.pathname;
    
    if (currentUrl !== lastUrl || currentPath !== lastPath) {
      console.log('üìÑ SPA ÌéòÏù¥ÏßÄ Î≥ÄÍ≤Ω Í∞êÏßÄ:', lastPath, '‚Üí', currentPath);
      lastUrl = currentUrl;
      lastPath = currentPath;
      
      // ÌéòÏù¥ÏßÄ Î≥ÄÍ≤Ω ÌõÑ ÏïΩÍ∞ÑÏùò ÏßÄÏó∞ÏùÑ ÎëêÍ≥† Ï∂îÏ†Å (DOM ÏóÖÎç∞Ïù¥Ìä∏ ÎåÄÍ∏∞)
      setTimeout(trackPageView, 500);
    }
  }, 1000);
  
  // History API Î≥ÄÍ≤Ω Í∞êÏßÄ
  const originalPushState = history.pushState;
  const originalReplaceState = history.replaceState;
  
  history.pushState = function(...args) {
    originalPushState.apply(history, args);
    setTimeout(trackPageView, 100);
  };
  
  history.replaceState = function(...args) {
    originalReplaceState.apply(history, args);
    setTimeout(trackPageView, 100);
  };
  
  // popstate Ïù¥Î≤§Ìä∏ Í∞êÏßÄ
  window.addEventListener('popstate', function() {
    setTimeout(trackPageView, 100);
  });
  
  console.log('‚úÖ SPA ÌéòÏù¥ÏßÄ Ï∂îÏ†Å Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
}

// ÏÑ§Ï†ï ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò (Îü∞ÌÉÄÏûÑÏóê ÏÑ§Ï†ï Î≥ÄÍ≤Ω Í∞ÄÎä•)
function updatePageViewConfig(newConfig) {
  if (newConfig.sectionMappings) {
    window.pageSectionMappings = { ...window.pageSectionMappings, ...newConfig.sectionMappings };
  }
  if (newConfig.categoryMappings) {
    window.pageCategoryMappings = { ...window.pageCategoryMappings, ...newConfig.categoryMappings };
  }
  if (newConfig.contentTypeMappings) {
    window.pageContentTypeMappings = { ...window.pageContentTypeMappings, ...newConfig.contentTypeMappings };
  }
  if (newConfig.utmParameters) {
    window.utmParameters = [...(window.utmParameters || []), ...newConfig.utmParameters];
  }
  if (newConfig.trackingParameters) {
    window.trackingParameters = [...(window.trackingParameters || []), ...newConfig.trackingParameters];
  }
  if (newConfig.customParameters) {
    window.customParameters = [...(window.customParameters || []), ...newConfig.customParameters];
  }
  if (newConfig.videoSelectors) {
    window.videoSelectors = [...(window.videoSelectors || []), ...newConfig.videoSelectors];
  }
  if (newConfig.downloadExtensions) {
    window.downloadExtensions = [...(window.downloadExtensions || []), ...newConfig.downloadExtensions];
  }
  
  console.log('üìÑ ÌéòÏù¥ÏßÄ Î∑∞ ÏÑ§Ï†ï ÏóÖÎç∞Ïù¥Ìä∏ ÏôÑÎ£å:', newConfig);
}

// ÎîîÎ≤ÑÍπÖÏö© Ìï®Ïàò
function debugPageViewTracking() {
  console.log('üìÑ ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å ÎîîÎ≤ÑÍπÖ Ï†ïÎ≥¥:');
  console.log('- ÌòÑÏû¨ URL:', window.location.href);
  console.log('- ÌéòÏù¥ÏßÄ Í≤ΩÎ°ú:', window.location.pathname);
  console.log('- ÌéòÏù¥ÏßÄ Ï†úÎ™©:', document.title);
  console.log('- ÌéòÏù¥ÏßÄ ÏÑπÏÖò:', getPageSection());
  console.log('- ÌéòÏù¥ÏßÄ Ïπ¥ÌÖåÍ≥†Î¶¨:', getPageCategory());
  console.log('- ÌéòÏù¥ÏßÄ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ:', getPageContentType());
  console.log('- Ìèº Ï°¥Ïû¨:', hasForms());
  console.log('- ÎπÑÎîîÏò§ Ï°¥Ïû¨:', hasVideos());
  console.log('- Îã§Ïö¥Î°úÎìú Ï°¥Ïû¨:', hasDownloads());
  console.log('- ÌéòÏù¥ÏßÄ Î°úÎìú ÏãúÍ∞Ñ:', getPageLoadTime(), 'ms');
  console.log('- Referrer:', document.referrer);
  console.log('- ThinkingData SDK:', typeof window.te !== 'undefined' ? 'Î°úÎìúÎê®' : 'Î°úÎìú ÏïàÎê®');
  
  // ÎèôÏ†Å ÌååÎùºÎØ∏ÌÑ∞ ÌôïÏù∏
  const urlParams = new URLSearchParams(window.location.search);
  const dynamicParams = extractDynamicParameters(urlParams);
  
  if (Object.keys(dynamicParams.utm).length > 0) {
    console.log('- UTM ÌååÎùºÎØ∏ÌÑ∞:', dynamicParams.utm);
  }
  if (Object.keys(dynamicParams.tracking).length > 0) {
    console.log('- Ï∂îÏ†Å ÌååÎùºÎØ∏ÌÑ∞:', dynamicParams.tracking);
  }
  if (Object.keys(dynamicParams.custom).length > 0) {
    console.log('- Ïª§Ïä§ÌÖÄ ÌååÎùºÎØ∏ÌÑ∞:', dynamicParams.custom);
  }
  
  // ÏÑ§Ï†ï Ï†ïÎ≥¥ ÌôïÏù∏
  console.log('- ÏÑπÏÖò Îß§Ìïë:', window.pageSectionMappings);
  console.log('- Ïπ¥ÌÖåÍ≥†Î¶¨ Îß§Ìïë:', window.pageCategoryMappings);
  console.log('- ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ Îß§Ìïë:', window.pageContentTypeMappings);
}

// Ï†ÑÏó≠ Ìï®ÏàòÎ°ú ÎÖ∏Ï∂ú
window.trackPageView = trackPageView;
window.initSPAPageTracking = initSPAPageTracking;
window.debugPageViewTracking = debugPageViewTracking;
window.updatePageViewConfig = updatePageViewConfig;

// DOM Î°úÎìú ÏôÑÎ£å ÌõÑ ÏûêÎèô Ïã§Ìñâ
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM Î°úÎìú ÏôÑÎ£å, ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å ÏãúÏûë');
    setTimeout(trackPageView, 1000);
  });
} else {
  // DOMÏù¥ Ïù¥ÎØ∏ Î°úÎìúÎêú Í≤ΩÏö∞
  console.log('üìÑ DOM Ïù¥ÎØ∏ Î°úÎìúÎê®, ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å ÏãúÏûë');
  setTimeout(trackPageView, 1000);
}

// ThinkingData Ï¥àÍ∏∞Ìôî ÏôÑÎ£å Ïù¥Î≤§Ìä∏ Í∞êÏßÄ
window.addEventListener('thinkingdata:ready', function() {
  console.log('üìÑ ThinkingData Ï¥àÍ∏∞Ìôî ÏôÑÎ£å, ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å ÏãúÏûë');
  setTimeout(trackPageView, 500);
});

// ÌéòÏù¥ÏßÄ Î°úÎìú ÏôÑÎ£å ÌõÑ Ìïú Î≤à Îçî ÏãúÎèÑ
window.addEventListener('load', function() {
  console.log('üìÑ ÌéòÏù¥ÏßÄ Î°úÎìú ÏôÑÎ£å, ÌéòÏù¥ÏßÄ Î∑∞ Ï∂îÏ†Å Ïû¨ÌôïÏù∏');
  setTimeout(trackPageView, 2000);
});

// ÌéòÏù¥ÏßÄ Î°úÎìú Ï¶âÏãú Ïã§Ìñâ (Í∏∞Ï°¥ Î°úÏßÅ Ïú†ÏßÄ)
trackPageView();